const fs = require('fs');
const path = require('path');

console.log('üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ FSM —Å–∏—Å—Ç–µ–º—ã...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã FSM
const fsmFiles = [
  'src/lib/fsm/types.ts',
  'src/lib/fsm/schema.ts',
  'src/lib/fsm/graph.ts',
  'src/lib/fsm/apply.ts',
  'src/lib/fsm/api.ts',
  'src/lib/fsm/useFSM.ts',
  'src/app/chat/[chatId]/ActionModals/ReceivePartialDialog.tsx',
  'src/app/chat/[chatId]/ActionModals/SplitDialog.tsx',
  'src/components/lineage/LineagePanel.tsx',
  'src/components/lineage/LineageBadge.tsx',
  'src/components/fsm/StatusActionsV2.tsx',
  'src/components/fsm/SystemCards.tsx'
];

let allFilesExist = true;
fsmFiles.forEach(file => {
  const filePath = path.join(__dirname, file);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –ù–ï –ù–ê–ô–î–ï–ù`);
    allFilesExist = false;
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏—á–µ-—Ñ–ª–∞–≥–∏
const flagsPath = path.join(__dirname, 'src/lib/flags.ts');
if (fs.existsSync(flagsPath)) {
  const flagsContent = fs.readFileSync(flagsPath, 'utf8');
  
  const checks = [
    { name: 'FSM_V2_ENABLED —Ñ–ª–∞–≥', pattern: /FSM_V2_ENABLED.*=.*true/ },
    { name: 'LINEAGE_V2_ENABLED —Ñ–ª–∞–≥', pattern: /LINEAGE_V2_ENABLED.*=.*true/ },
  ];

  console.log('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏—á–µ-—Ñ–ª–∞–≥–æ–≤:');
  checks.forEach(check => {
    if (check.pattern.test(flagsContent)) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
} else {
  console.log('‚ùå flags.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
  allFilesExist = false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ —á–∞—Ç
const chatPagePath = path.join(__dirname, 'src/app/chat/[chatId]/page.tsx');
if (fs.existsSync(chatPagePath)) {
  const content = fs.readFileSync(chatPagePath, 'utf8');

  const checks = [
    { name: 'FSM_V2_ENABLED –∏–º–ø–æ—Ä—Ç', pattern: /FSM_V2_ENABLED/ },
    { name: 'StatusActionsV2 –∏–º–ø–æ—Ä—Ç', pattern: /StatusActionsV2/ },
    { name: 'useFSM –∏–º–ø–æ—Ä—Ç', pattern: /useFSM/ },
    { name: 'FSM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', pattern: /StatusActionsV2.*\n.*chatId.*\n.*role.*\n.*status/ },
  ];

  console.log('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —á–∞—Ç:');
  checks.forEach(check => {
    if (check.pattern.test(content)) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
} else {
  console.log('‚ùå chat page –Ω–µ –Ω–∞–π–¥–µ–Ω');
  allFilesExist = false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º ACL –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
const statusActionsPath = path.join(__dirname, 'src/app/chat/[chatId]/components/StatusActions.tsx');
if (fs.existsSync(statusActionsPath)) {
  const content = fs.readFileSync(statusActionsPath, 'utf8');

  const checks = [
    { name: 'IfCan –∏–º–ø–æ—Ä—Ç', pattern: /import.*IfCan/ },
    { name: 'useAbility –∏–º–ø–æ—Ä—Ç', pattern: /import.*useAbility/ },
    { name: 'ACL –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–Ω–æ–ø–æ–∫', pattern: /<IfCan.*resource.*action.*mode="disable"/ },
  ];

  console.log('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ ACL –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
  checks.forEach(check => {
    if (check.pattern.test(content)) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
} else {
  console.log('‚ùå StatusActions.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω');
  allFilesExist = false;
}

if (allFilesExist) {
  console.log('\n‚ú® FSM —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó S11!');
  console.log('üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:');
  console.log('  ‚Ä¢ –ú–∞—à–∏–Ω–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å —á–∞—Å—Ç–∏—á–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏');
  console.log('  ‚Ä¢ Split/Merge –æ–ø–µ—Ä–∞—Ü–∏–∏');
  console.log('  ‚Ä¢ Lineage (–∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è)');
  console.log('  ‚Ä¢ –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
  console.log('  ‚Ä¢ ACL –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è');
  console.log('  ‚Ä¢ System cards –¥–ª—è –∞—É–¥–∏—Ç–∞');
} else {
  console.log('\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ FSM —Å–∏—Å—Ç–µ–º—ã.');
}
