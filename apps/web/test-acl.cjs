const fs = require('fs');
const path = require('path');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ACL —Å–∏—Å—Ç–µ–º—ã...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã ACL —Å–æ–∑–¥–∞–Ω—ã
const aclFiles = [
  'src/lib/acl/types.ts',
  'src/lib/acl/policy.ts', 
  'src/lib/acl/ability.ts',
  'src/lib/acl/explain.ts',
  'src/lib/acl/context.tsx',
  'src/lib/acl/useAbility.ts',
  'src/lib/acl/IfCan.tsx',
  'src/lib/acl/Guard.tsx',
  'src/lib/acl/audit.ts',
  'src/lib/acl/devtools.tsx',
  'src/lib/acl/route-guard.ts',
  'src/app/api/audit/ui/access-denied/route.ts'
];

let allFilesExist = true;
aclFiles.forEach(file => {
  const filePath = path.join(__dirname, file);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –ù–ï –ù–ê–ô–î–ï–ù`);
    allFilesExist = false;
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ layout.tsx
const layoutPath = path.join(__dirname, 'src/app/layout.tsx');
if (fs.existsSync(layoutPath)) {
  const layoutContent = fs.readFileSync(layoutPath, 'utf8');
  
  const checks = [
    { name: 'ACL_V2_ENABLED –∏–º–ø–æ—Ä—Ç', pattern: /ACL_V2_ENABLED/ },
    { name: 'ACLProvider –∏–º–ø–æ—Ä—Ç', pattern: /import.*ACLProvider/ },
    { name: 'ACLDevtools –∏–º–ø–æ—Ä—Ç', pattern: /import.*ACLDevtools/ },
    { name: 'ACLProvider –æ–±–µ—Ä—Ç–∫–∞', pattern: /<ACLProvider/ },
    { name: 'ACLDevtools –∫–æ–º–ø–æ–Ω–µ–Ω—Ç', pattern: /<ACLDevtools/ }
  ];
  
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ layout.tsx:');
  checks.forEach(check => {
    if (check.pattern.test(layoutContent)) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
} else {
  console.log('‚ùå layout.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω');
  allFilesExist = false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ StatusActions
const statusActionsPath = path.join(__dirname, 'src/app/chat/[chatId]/components/StatusActions.tsx');
if (fs.existsSync(statusActionsPath)) {
  const content = fs.readFileSync(statusActionsPath, 'utf8');
  
  const checks = [
    { name: 'IfCan –∏–º–ø–æ—Ä—Ç', pattern: /import.*IfCan/ },
    { name: 'useAbility –∏–º–ø–æ—Ä—Ç', pattern: /import.*useAbility/ },
    { name: 'IfCan –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', pattern: /<IfCan/ }
  ];
  
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ StatusActions:');
  checks.forEach(check => {
    if (check.pattern.test(content)) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
} else {
  console.log('‚ùå StatusActions.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω');
  allFilesExist = false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ BottomNav
const bottomNavPath = path.join(__dirname, 'src/components/layout/BottomNav.tsx');
if (fs.existsSync(bottomNavPath)) {
  const content = fs.readFileSync(bottomNavPath, 'utf8');
  
  const checks = [
    { name: 'useAbility –∏–º–ø–æ—Ä—Ç', pattern: /import.*useAbility/ },
    { name: 'ability.can –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', pattern: /ability\.can/ }
  ];
  
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ BottomNav:');
  checks.forEach(check => {
    if (check.pattern.test(content)) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
} else {
  console.log('‚ùå BottomNav.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω');
  allFilesExist = false;
}

console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
if (allFilesExist) {
  console.log('üéâ ACL —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞!');
  console.log('\n‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:');
  console.log('‚Ä¢ –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ (USER, ADMIN, SUPER)');
  console.log('‚Ä¢ –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —Å —É—Å–ª–æ–≤–∏—è–º–∏');
  console.log('‚Ä¢ UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã IfCan –∏ Guard');
  console.log('‚Ä¢ –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –æ—Ç–∫–∞–∑–∞');
  console.log('‚Ä¢ UI-–∞—É–¥–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–∞');
  console.log('‚Ä¢ DevTools –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  console.log('‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ StatusActions –∏ BottomNav');
} else {
  console.log('‚ùå ACL —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞');
}
