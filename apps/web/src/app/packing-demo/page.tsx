'use client';

import React, { useState } from 'react';
import { PackingConfigurator, PackingPresets, ParcelForm, Parcel3DViewer } from '@yp/ui';
import { FLAGS } from '@yp/shared';

export default function PackingDemoPage() {
  const [showConfigurator, setShowConfigurator] = useState(false);
  const [showPresets, setShowPresets] = useState(false);
  const [showParcelForm, setShowParcelForm] = useState(false);
  const [show3DViewer, setShow3DViewer] = useState(false);
  const [selectedParcel, setSelectedParcel] = useState<any>(null);

  const mockChatId = 'demo-chat-id';
  const mockChatStatus = 'PACK';

  const handleCreateParcel = (data: any) => {
    console.log('Creating parcel:', data);
    setShowParcelForm(false);
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤
  };

  const handle3DView = (parcel: any) => {
    setSelectedParcel(parcel);
    setShow3DViewer(true);
  };

  return (
    <div className="min-h-screen bg-gray-100 p-4">
      <div className="max-w-6xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">
          S16 ‚Äî –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä —É–ø–∞–∫–æ–≤–∫–∏ Pro (Demo)
        </h1>

        {/* Feature Flags Status */}
        <div className="mb-8 p-4 bg-white rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">Feature Flags Status</h2>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className={`p-3 rounded ${FLAGS.PACK_PRO_ENABLED ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>
              <div className="font-medium">PACK_PRO_ENABLED</div>
              <div className="text-sm">{FLAGS.PACK_PRO_ENABLED ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}</div>
            </div>
            <div className={`p-3 rounded ${FLAGS.PACK_LABELS_ENABLED ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>
              <div className="font-medium">PACK_LABELS_ENABLED</div>
              <div className="text-sm">{FLAGS.PACK_LABELS_ENABLED ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}</div>
            </div>
            <div className={`p-3 rounded ${FLAGS.PACK_PRESETS_ENABLED ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>
              <div className="font-medium">PACK_PRESETS_ENABLED</div>
              <div className="text-sm">{FLAGS.PACK_PRESETS_ENABLED ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}</div>
            </div>
            <div className={`p-3 rounded ${FLAGS.PACK_3D_ENABLED ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>
              <div className="font-medium">PACK_3D_ENABLED</div>
              <div className="text-sm">{FLAGS.PACK_3D_ENABLED ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}</div>
            </div>
          </div>
        </div>

        {/* Demo Controls */}
        <div className="mb-8 p-4 bg-white rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">Demo Controls</h2>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <button
              onClick={() => setShowConfigurator(true)}
              className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
            >
              üì¶ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä
            </button>
            <button
              onClick={() => setShowPresets(true)}
              className="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
            >
              ‚öôÔ∏è –ü—Ä–µ—Å–µ—Ç—ã
            </button>
            <button
              onClick={() => setShowParcelForm(true)}
              className="px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600"
            >
              ‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—ã–ª–∫—É
            </button>
            <button
              onClick={() => handle3DView({
                length: 30,
                width: 20,
                height: 15,
                kind: 'box'
              })}
              className="px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600"
            >
              üéØ 3D –ü—Ä–æ—Å–º–æ—Ç—Ä
            </button>
          </div>
        </div>

        {/* API Endpoints Info */}
        <div className="mb-8 p-4 bg-white rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">API Endpoints</h2>
          <div className="space-y-2 text-sm">
            <div><strong>GET</strong> /api/packing/presets - –°–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤</div>
            <div><strong>POST</strong> /api/packing/presets - –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ—Å–µ—Ç</div>
            <div><strong>GET</strong> /api/shipments/:chatId/parcels - –°–ø–∏—Å–æ–∫ –ø–æ—Å—ã–ª–æ–∫</div>
            <div><strong>POST</strong> /api/shipments/:chatId/parcels - –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—ã–ª–∫—É</div>
            <div><strong>PATCH</strong> /api/parcels/:id - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É</div>
            <div><strong>POST</strong> /api/parcels/:id/move - –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—ã–ª–∫—É</div>
            <div><strong>DELETE</strong> /api/parcels/:id - –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—ã–ª–∫—É</div>
            <div><strong>POST</strong> /api/packing/labels - –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏–∫–µ—Ç–∫–∏</div>
            <div><strong>GET</strong> /api/packing/labels/:id/url - URL —ç—Ç–∏–∫–µ—Ç–∫–∏</div>
          </div>
        </div>

        {/* Features Overview */}
        <div className="mb-8 p-4 bg-white rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="font-semibold text-lg mb-2">üì¶ –£–ø–∞–∫–æ–≤–∫–∞</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Parcel</li>
                <li>‚úÖ –ò–µ—Ä–∞—Ä—Ö–∏—è –ø–æ—Å—ã–ª–æ–∫ (MERGE)</li>
                <li>‚úÖ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–æ–≤</li>
                <li>‚úÖ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—ä–µ–º–∞</li>
                <li>‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤/–≤–µ—Å–∞</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-2">‚öôÔ∏è –ü—Ä–µ—Å–µ—Ç—ã</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–æ–º</li>
                <li>‚úÖ –ü—Ä–∞–≤–∏–ª–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</li>
                <li>‚úÖ –ü—Ä–µ—Å–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</li>
                <li>‚úÖ JSON —Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-2">üí∞ –§–∏–Ω–∞–Ω—Å—ã</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚úÖ –ê–≤—Ç–æ–æ–ø–µ—Ä–∞—Ü–∏–∏ —É–ø–∞–∫–æ–≤–∫–∏</li>
                <li>‚úÖ –°—Ç–æ—Ä–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö</li>
                <li>‚úÖ –§–∏–∫—Å/–∑–∞ –∫–≥ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</li>
                <li>‚úÖ –°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –≤ %</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-2">üè∑Ô∏è –≠—Ç–∏–∫–µ—Ç–∫–∏</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚úÖ PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (A7/A6)</li>
                <li>‚úÖ QR –∫–æ–¥—ã</li>
                <li>‚úÖ –®—Ç—Ä–∏—Ö-–∫–æ–¥—ã</li>
                <li>‚úÖ Presigned URLs</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-2">üéØ 3D –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚úÖ –ò–∑–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–µ–∫—Ü–∏—è</li>
                <li>‚úÖ –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
                <li>‚úÖ –¶–≤–µ—Ç–æ–≤–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Ç–∏–ø–æ–≤</li>
                <li>‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏</li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-2">üîÑ Real-time</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚úÖ –°–æ–±—ã—Ç–∏—è —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
                <li>‚úÖ –°–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è</li>
                <li>‚úÖ –°–æ–±—ã—Ç–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Ç–∏–∫–µ—Ç–æ–∫</li>
                <li>‚úÖ WebSocket –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Mobile-First Design */}
        <div className="mb-8 p-4 bg-white rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">Mobile-First Design</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="p-3 bg-blue-50 rounded">
              <div className="font-medium">üì± –ú–æ–±–∏–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å</div>
              <div className="text-sm text-gray-600">–û–¥–Ω–æ–∫–æ–ª–æ–Ω–æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞, –∫—Ä—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏</div>
            </div>
            <div className="p-3 bg-green-50 rounded">
              <div className="font-medium">üéØ Touch-friendly</div>
              <div className="text-sm text-gray-600">–£–¥–æ–±–Ω—ã–µ –∂–µ—Å—Ç—ã, —Å–≤–∞–π–ø—ã</div>
            </div>
            <div className="p-3 bg-purple-50 rounded">
              <div className="font-medium">üìê –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞</div>
              <div className="text-sm text-gray-600">Responsive layout</div>
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {showConfigurator && (
        <PackingConfigurator
          chatId={mockChatId}
          chatStatus={mockChatStatus}
          onClose={() => setShowConfigurator(false)}
        />
      )}

      {showPresets && (
        <PackingPresets
          onClose={() => setShowPresets(false)}
        />
      )}

      {showParcelForm && (
        <ParcelForm
          chatId={mockChatId}
          onSave={handleCreateParcel}
          onCancel={() => setShowParcelForm(false)}
        />
      )}

      {show3DViewer && selectedParcel && (
        <Parcel3DViewer
          length={selectedParcel.length}
          width={selectedParcel.width}
          height={selectedParcel.height}
          kind={selectedParcel.kind}
          onClose={() => {
            setShow3DViewer(false);
            setSelectedParcel(null);
          }}
        />
      )}
    </div>
  );
}
