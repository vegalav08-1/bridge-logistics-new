/**
 * –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —á–∞—Ç–∞ –∏ –æ—Ç–≥—Ä—É–∑–∫–∏
 */

export interface ShipmentInfo {
  id: string;
  number: string;
  status: 'NEW' | 'RECEIVE' | 'PACK' | 'MERGE' | 'IN_TRANSIT' | 'ON_DELIVERY' | 'DELIVERED' | 'CANCELLED';
  title: string;
  subtitle?: string;
  createdAt: string;
  updatedAt: string;
  client: {
    name: string;
    phone: string;
    email: string;
    address: string;
  };
  items: {
    id: string;
    name: string;
    quantity: number;
    weight: number;
    dimensions: string;
    description?: string;
  }[];
  totalWeight: number;
  totalVolume: number;
  estimatedValue: number;
  specialInstructions?: string;
  trackingNumber?: string;
  deliveryAddress: {
    street: string;
    city: string;
    postalCode: string;
    country: string;
    contactPerson: string;
    phone: string;
  };
}

export interface ChatMessage {
  id: string;
  type: 'system' | 'user' | 'admin' | 'auto';
  content: string;
  timestamp: string;
  sender?: {
    name: string;
    role: 'USER' | 'ADMIN' | 'SUPER_ADMIN';
    avatar?: string;
  };
  isPinned?: boolean;
  quotedMessage?: ChatMessage;
  attachments?: Array<{
    id: string;
    fileName: string;
    name: string;
    size: number;
    mimeType: string;
    type: string;
    url: string;
    downloadUrl: string;
  }>;
  metadata?: {
    shipmentId?: string;
    action?: string;
    data?: any;
  };
}

export const generateRealShipmentData = (chatId: string): ShipmentInfo => {
  const now = new Date();
  const createdAt = new Date(now.getTime() - Math.random() * 7 * 24 * 60 * 60 * 1000); // –°–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
  
  return {
    id: chatId,
    number: `BR-${chatId.slice(-6).toUpperCase()}`,
    status: 'NEW',
    title: '–û—Ç–≥—Ä—É–∑–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤',
    subtitle: '–°—Ä–æ—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –ú–æ—Å–∫–≤—É',
    createdAt: createdAt.toISOString(),
    updatedAt: now.toISOString(),
    client: {
      name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      phone: '+7 (999) 123-45-67',
      email: 'ivan.petrov@example.com',
      address: '–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, —É–ª. –ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, –¥. 1'
    },
    items: [
      {
        id: 'item-1',
        name: '–ù–æ—É—Ç–±—É–∫ MacBook Pro 16"',
        quantity: 1,
        weight: 2.0,
        dimensions: '35.6 x 24.8 x 1.7 —Å–º',
        description: '–°–µ—Ä—ã–π –∫–æ—Å–º–æ—Å, 512GB SSD, 16GB RAM'
      },
      {
        id: 'item-2',
        name: '–ú—ã—à—å Magic Mouse',
        quantity: 2,
        weight: 0.1,
        dimensions: '11.3 x 5.7 x 3.2 —Å–º',
        description: '–ë–µ–ª–∞—è, –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è'
      },
      {
        id: 'item-3',
        name: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ Magic Keyboard',
        quantity: 1,
        weight: 0.23,
        dimensions: '27.9 x 11.4 x 0.4 —Å–º',
        description: '–†—É—Å—Å–∫–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞, –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è'
      }
    ],
    totalWeight: 2.53,
    totalVolume: 0.15,
    estimatedValue: 250000,
    specialInstructions: '–•—Ä—É–ø–∫–∏–π –≥—Ä—É–∑. –¢—Ä–µ–±—É–µ—Ç—Å—è –æ—Å—Ç–æ—Ä–æ–∂–Ω–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞.',
    deliveryAddress: {
      street: '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 15, –∫–≤. 42',
      city: '–ú–æ—Å–∫–≤–∞',
      postalCode: '125009',
      country: '–†–æ—Å—Å–∏—è',
      contactPerson: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
      phone: '+7 (495) 123-45-67'
    }
  };
};

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –∏ –ø—Ä–æ—Ñ–∏–ª—è
export const generateShipmentSystemMessage = (formData: any, userProfile: any): ChatMessage => {
  const now = new Date();
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è
  let senderInfo = '';
  let contactInfo = '';
  let addressInfo = '';
  
  if (userProfile) {
    if (userProfile.type === 'individual') {
      senderInfo = `**üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** ${userProfile.firstName} ${userProfile.lastName}`;
      contactInfo = `**üìû –¢–µ–ª–µ—Ñ–æ–Ω:** ${userProfile.phone}\n**üìß Email:** ${userProfile.email}`;
      if (userProfile.clientCode) {
        contactInfo += `\n**üî¢ –ù–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞:** ${userProfile.clientCode}`;
      }
      addressInfo = `**üìç –ê–¥—Ä–µ—Å:** ${userProfile.address}, ${userProfile.city}, ${userProfile.postalCode}, ${userProfile.country}`;
    } else if (userProfile.type === 'legal') {
      senderInfo = `**üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:** ${userProfile.companyName}`;
      contactInfo = `**üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:** ${userProfile.contactPersonName}\n**üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å:** ${userProfile.contactPersonPosition}\n**üìû –¢–µ–ª–µ—Ñ–æ–Ω:** ${userProfile.phone}\n**üìß Email:** ${userProfile.email}`;
      if (userProfile.clientCode) {
        contactInfo += `\n**üî¢ –ù–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞:** ${userProfile.clientCode}`;
      }
      addressInfo = `**üìç –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å:** ${userProfile.legalAddress}\n**üìç –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å:** ${userProfile.actualAddress}`;
    }
  } else {
    // Fallback –¥–∞–Ω–Ω—ã–µ
    senderInfo = `**üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`;
    contactInfo = `**üìß Email:** user@example.com`;
    addressInfo = `**üìç –ê–¥—Ä–µ—Å:** –ù–µ —É–∫–∞–∑–∞–Ω`;
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
  const itemsInfo = formData.items && formData.items.length > 0 
    ? formData.items.map((item: any, index: number) => 
        `‚Ä¢ ${item.name || `–¢–æ–≤–∞—Ä ${index + 1}`} (${item.quantity || 0} —à—Ç.) - ${(item.price || 0).toLocaleString('ru-RU')} ‚ÇΩ`
      ).join('\n')
    : '–¢–æ–≤–∞—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã';

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—ã–ª–∫–∞—Ö
  const boxesInfo = formData.boxes && formData.boxes.length > 0
    ? formData.boxes.map((box: any, index: number) => {
        const volume = (box.dimensions?.length || 0) * (box.dimensions?.width || 0) * (box.dimensions?.height || 0) / 1000000;
        const weight = box.weight || 0;
        return `‚Ä¢ ${box.name || `–ü–æ—Å—ã–ª–∫–∞ ${index + 1}`}: ${box.dimensions?.length || 0}√ó${box.dimensions?.width || 0}√ó${box.dimensions?.height || 0} —Å–º, ${weight} –∫–≥ (${volume.toFixed(3)} –º¬≥)`;
      }).join('\n')
    : '–ü–æ—Å—ã–ª–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã';

  // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  const totalWeight = formData.boxes?.reduce((total, box) => total + (box.weight || 0), 0) || 0;
  const totalVolume = formData.totalVolumeM3 || 0;
  const totalCost = formData.totalCost || 0;
  const boxesCount = formData.boxes?.length || 0;

  return {
    id: `shipment-${Date.now()}`,
    type: 'system',
    content: `üì¶ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–≥—Ä—É–∑–∫–µ**

${senderInfo}

${contactInfo}

${addressInfo}

**üì¶ –¢–æ–≤–∞—Ä—ã:**
${itemsInfo}

**üì¶ –ü–æ—Å—ã–ª–∫–∏:**
${boxesInfo}

**üìä –û–±—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
‚Ä¢ –û–±—â–∏–π –≤–µ—Å: ${totalWeight} –∫–≥
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫: ${boxesCount} —à—Ç.
‚Ä¢ –û–±—â–∏–π –æ–±—ä–µ–º: ${totalVolume.toFixed(3)} –º¬≥
‚Ä¢ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalCost.toLocaleString('ru-RU')} ‚ÇΩ

**üéØ –ê–¥—Ä–µ—Å –ø—Ä–∏–±—ã—Ç–∏—è:**
${formData.arrivalAddress || '–ù–µ —É–∫–∞–∑–∞–Ω'}

**üìù –û–ø–∏—Å–∞–Ω–∏–µ:**
${formData.shortDesc || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

**üìÖ –°–æ–∑–¥–∞–Ω–æ:** ${now.toLocaleString('ru-RU')}`,
    timestamp: now.toISOString(),
    isPinned: true,
    metadata: {
      action: 'shipment_info',
      data: {
        formData,
        userProfile,
        createdAt: now.toISOString()
      }
    }
  };
};

export const generatePinnedMessage = (shipment: ShipmentInfo): ChatMessage => {
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
  const { getProfileForSystemMessage } = require('@/lib/profile/user-profile');
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const profileData = getProfileForSystemMessage();
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ fallback –¥–∞–Ω–Ω—ã—Ö
  let senderInfo = '';
  let contactInfo = '';
  let addressInfo = '';
  
  if (profileData) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    senderInfo = profileData.senderInfo;
    contactInfo = profileData.contactInfo;
    addressInfo = profileData.addressInfo;
  } else {
    // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ shipment
    senderInfo = `**üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** ${shipment.client.name}`;
    contactInfo = `**üìû –¢–µ–ª–µ—Ñ–æ–Ω:** ${shipment.client.phone}\n**üìß Email:** ${shipment.client.email}`;
    addressInfo = `**üìç –ê–¥—Ä–µ—Å:** ${shipment.client.address}`;
  }

  return {
    id: `pinned-${shipment.id}`,
    type: 'system',
    content: `üì¶ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–≥—Ä—É–∑–∫–µ ${shipment.number}**

${senderInfo}

${contactInfo}

${addressInfo}

**üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:**
${shipment.items.map(item => 
  `‚Ä¢ ${item.name} (${item.quantity} —à—Ç.) - ${item.weight} –∫–≥`
).join('\n')}

**üìä –û–±—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
‚Ä¢ –û–±—â–∏–π –≤–µ—Å: ${shipment.totalWeight} –∫–≥
‚Ä¢ –û–±—â–∏–π –æ–±—ä–µ–º: ${shipment.totalVolume} –º¬≥
‚Ä¢ –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${shipment.estimatedValue.toLocaleString('ru-RU')} ‚ÇΩ

**üéØ –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:**
${shipment.deliveryAddress.contactPerson}
${shipment.deliveryAddress.street}
${shipment.deliveryAddress.city}, ${shipment.deliveryAddress.postalCode}
üìû ${shipment.deliveryAddress.phone}

**‚ö†Ô∏è –û—Å–æ–±—ã–µ —É–∫–∞–∑–∞–Ω–∏—è:**
${shipment.specialInstructions || '–ù–µ—Ç –æ—Å–æ–±—ã—Ö —É–∫–∞–∑–∞–Ω–∏–π'}

**üìÖ –°–æ–∑–¥–∞–Ω–æ:** ${new Date(shipment.createdAt).toLocaleString('ru-RU')}
**üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ:** ${new Date(shipment.updatedAt).toLocaleString('ru-RU')}`,
    timestamp: shipment.createdAt,
    isPinned: true,
    metadata: {
      shipmentId: shipment.id,
      action: 'shipment_info',
      data: shipment
    }
  };
};

export const generateInitialMessages = (shipment: ShipmentInfo): ChatMessage[] => {
  const pinnedMessage = generatePinnedMessage(shipment);
  
  return [
    pinnedMessage
  ];
};
